name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/pspdev/pspsdk:latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add build-base linux-headers readline-dev libusb-compat-dev

    - name: Compile project
      run: |
        make -j $(getconf _NPROCESSORS_ONLN) clean
        make -j $(getconf _NPROCESSORS_ONLN)
        make -j $(getconf _NPROCESSORS_ONLN) -C pspsh install
        make -j $(getconf _NPROCESSORS_ONLN) -C usbhostfs_pc
        make release
    
    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: psplinkusb
        path: release

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@v4
        with:
          packages: gcc-core gcc-g++ make libreadline7 libreadline-devel libusb0 libusb-devel libncursesw10

      - name: Compile project
        run: |
          make -j $(getconf _NPROCESSORS_ONLN) -C pspsh
          make -j $(getconf _NPROCESSORS_ONLN) -C usbhostfs_pc
          mkdir build
          cp usbhostfs_pc\usbhostfs_pc.exe build
          cp pspsh\pspsh.exe build
          cp C:\tools\cygwin\bin\cygwin1.dll build
          cp C:\tools\cygwin\bin\cygstdc++-6.dll build
          cp C:\tools\cygwin\bin\cyggcc_s-seh-1.dll build
          cp C:\tools\cygwin\bin\cygreadline7.dll build
          cp C:\tools\cygwin\bin\cygusb0.dll build
          cp C:\tools\cygwin\bin\cygncursesw-10.dll build

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: psplinkusb-windows
          path: build

  publish:
    needs: [build, windows]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4

    - name: Compress & Rename artifacts
      run: |
        mv psplinkusb/psplink psplink
        zip -r psplink.zip psplink
        zip -r pspsh-windows.zip psplinkusb-windows

    - name: Create pre-release
      if: github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          psplink.zip
          pspsh-windows.zip
          release/psplink_manual.odt
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          psplink.zip
          pspsh-windows.zip
          release/psplink_manual.odt
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
